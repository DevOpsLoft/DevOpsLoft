---
version: '2.4'

services:
  python-app:
    env_file:
      - '.env'
    build:
      context: '.'
    ports:
      - 80:5000
      - 443:443
    volumes:
      - .:/app
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:5000"]
      interval: '10s'
      timeout: '10s'
      retries: 5

  prometheus:
    build:
      context: docker/prometheus
    ports:
      - 9090:9090
    volumes:
      - prometheus-data:/prometheus

  grafana:
    build:
      context: docker/grafana
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: '30s'
      timeout: '10s'
      retries: 3

#  container-exporter:
#    image: prom/container-exporter
#    volumes:
#      - /sys/fs/cgroup:/cgroup
#      - /var/run/docker.sock:/var/run/docker.sock
#    command: ["-labels=com.docker.compose.service,com.docker.compose.project"]

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  mysql-exporter:
    image: prom/mysqld-exporter
    env_file:
      - '.env'
    environment:
      - 'DATA_SOURCE_NAME=exporter:${MYSQL_EXPORTER_PASSWORD:-exporter}@(mysql:3306)/'

  mysql:
    image: mysql:8.0
    env_file:
      - '.env'
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_DATABASE=devopsloft"
      - "MYSQL_USER=application"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u$${MYSQL_USER}", "-p$${MYSQL_PASSWORD}"]
      interval: '30s'
      timeout: '10s'
      retries: 3

volumes:
  mysql-data:
  prometheus-data: